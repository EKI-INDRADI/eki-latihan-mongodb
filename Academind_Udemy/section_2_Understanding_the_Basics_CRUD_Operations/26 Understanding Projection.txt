Projection

di database :

{
    "_id" : "..",
    "name" : "Max",
    "age" : 29,
    "job" : "instructor"
}


sedangkan di aplikasi hanya perlu :

{
    "name" : "Max",
    "age" :29
}

db.passengers.find({},{name: 1}).pretty()
---------
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d53f"),
        "name" : "Max Schwarzmueller"
}
{ "_id" : ObjectId("60aa4bc5f2b92905a375d540"), "name" : "Manu Lorenz" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d541"), "name" : "Chris Hayton" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d542"), "name" : "Sandeep Kumar" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d543"), "name" : "Maria Jones" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d544"), "name" : "Alexandra Maier" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d545"), "name" : "Dr. Phil Evans" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d546"), "name" : "Sandra Brugge" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d547"), "name" : "Elisabeth Mayr" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d548"), "name" : "Frank Cube" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d549"), "name" : "Karandeep Alun" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d54a"), "name" : "Michaela Drayer" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d54b"), "name" : "Bernd Hoftstadt" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d54c"), "name" : "Scott Tolib" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d54d"), "name" : "Freddy Melver" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d54e"), "name" : "Alexis Bohed" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d54f"), "name" : "Melanie Palace" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d550"), "name" : "Armin Glutch" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d551"), "name" : "Klaus Arber" }
{ "_id" : ObjectId("60aa4bc5f2b92905a375d552"), "name" : "Albert Twostone" }
Type "it" for more
---------


db.passengers.find({},{name: 1, age : 1}).pretty()
---------
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d53f"),
        "name" : "Max Schwarzmueller",
        "age" : 29
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d540"),
        "name" : "Manu Lorenz",
        "age" : 30
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d541"),
        "name" : "Chris Hayton",
        "age" : 35
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d542"),
        "name" : "Sandeep Kumar",
        "age" : 28
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d543"),
        "name" : "Maria Jones",
        "age" : 30
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d544"),
        "name" : "Alexandra Maier",
        "age" : 27
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d545"),
        "name" : "Dr. Phil Evans",
        "age" : 47
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d546"),
        "name" : "Sandra Brugge",
        "age" : 33
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d547"),
        "name" : "Elisabeth Mayr",
        "age" : 29
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d548"),
        "name" : "Frank Cube",
        "age" : 41
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d549"),
        "name" : "Karandeep Alun",
        "age" : 48
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d54a"),
        "name" : "Michaela Drayer",
        "age" : 39
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d54b"),
        "name" : "Bernd Hoftstadt",
        "age" : 22
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d54c"),
        "name" : "Scott Tolib",
        "age" : 44
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d54d"),
        "name" : "Freddy Melver",
        "age" : 41
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d54e"),
        "name" : "Alexis Bohed",
        "age" : 35
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d54f"),
        "name" : "Melanie Palace",
        "age" : 27
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d550"),
        "name" : "Armin Glutch",
        "age" : 35
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d551"),
        "name" : "Klaus Arber",
        "age" : 53
}
{
        "_id" : ObjectId("60aa4bc5f2b92905a375d552"),
        "name" : "Albert Twostone",
        "age" : 68
}
Type "it" for more
---------

Note : secara default pada projection untuk id selalu di sertakan tidak bs dihilangkan, tetapi da cara untuk menghilangkan _id  dengan cara :

db.passengers.find({},{name: 1, _id : 0}).pretty()
---------
{ "name" : "Max Schwarzmueller" }
{ "name" : "Manu Lorenz" }
{ "name" : "Chris Hayton" }
{ "name" : "Sandeep Kumar" }
{ "name" : "Maria Jones" }
{ "name" : "Alexandra Maier" }
{ "name" : "Dr. Phil Evans" }
{ "name" : "Sandra Brugge" }
{ "name" : "Elisabeth Mayr" }
{ "name" : "Frank Cube" }
{ "name" : "Karandeep Alun" }
{ "name" : "Michaela Drayer" }
{ "name" : "Bernd Hoftstadt" }
{ "name" : "Scott Tolib" }
{ "name" : "Freddy Melver" }
{ "name" : "Alexis Bohed" }
{ "name" : "Melanie Palace" }
{ "name" : "Armin Glutch" }
{ "name" : "Klaus Arber" }
{ "name" : "Albert Twostone" }
Type "it" for more
---------